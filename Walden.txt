工作周志
动态成本产品分摊过程中分摊单据收尾
在上个迭代过程测试合约规划相关功能的过程中，发现现有架构不支持后置单据退出所有前置单据科目成本的情况，因为现有架构是以当前单据科目分摊规则为循环基础的，假如当前单据没有分摊规则的时候，程序是不会进入产品动态成本计算循环中，假如当前单据有前置单据的时候，例如合约规划，合同，补充合同，分包合同，设计变更，设计变更完工确认，现场签证以及现场签证完工确认。
基于以上情况，需要修改计算动态成本产品基类，不以单据科目分摊规则为循环基础，改成以当前单据成本归集涉及的科目为循环基础。基本思路如下：
1.	获取当前单据的成本归集涉及的科目；
2.	获取当前单据的科目分摊相关的科目；
3.	取1 和2科目的并集；
4.	根据3中的科目获取科目所属分期对应的动态成本产品列表；
5.	开始循环科目；
6.	开始循环科目对应的科目分摊归集；
7.	开始循环产品分摊规则对应的产品分摊规则；
8.	计算差值；
9.	返回最新产品动态成本；
10.	最新动态产品动态成本入库。
除了三费导入，由于这个业务不了解，所以没有写单元测试，其他的单据均已经按照最新的架构，完成了改造和添加相关单元测试。
记得在讨论合同结算时候，无法确定合同结算最后一个单据，导致合同结算每次的查询量都比较大，在同测试讨论之后，发现以前的方案，在这种场景计算比较简单，综合之后决定在每个单据添加IsValid字段，以此来满足这种场景的计算，这些场景包括：
1.	合同结算
2.	重新归集，扣减对应合约规划对于成本的影响
基于上述情况，需要给所有单据添加IsValid字段，目前这个任务已经完成，数据库添加IsValid字段，实体添加IsValid，维护IsValid字段变化，并且添加了对应的单元测试。
目前动态成本产品分摊还剩下一些内容，由于需要休陪产假，把这部分的内容的思考写出来，供大家参考。
1.	合同结算（实现过程中分摊基类）
审批通过：成本归集->合约规划->科目->搜索前置单据->搜索IsValid=1的科目分摊规则->汇总产品分摊数据为前值
审批通过后驳回：审批通过前值*-1
2.	成本分摊－重新归集后影响：
有结算：取结算
无结算：成本归集->科目->搜索前置单据->搜索IsValid=1的科目分摊规则->汇总产品分摊数据为退出值
3.	公建分摊
公建分摊本质上同单据没有关系，主要是修改可售成本，然而可售成本影响因子有：产品，建筑成本。
修改公建分摊规则：公建产品->非公建产品->分期->科目
修改非公建产品的建筑本成本：非公建产品->公建产品->非公建产品->分期->科目
4.	重新分摊
属于特殊的过程中分摊，过程中分摊规则来自于之前的规则保存，集中分摊的规则来自于前端收集的规则，并且这个规则需要即可生效，所以重新分摊应该重写过程中分摊的Bill计算函数，然后给不同的单据去做实现。
5.	提取规划指标
提取规划指标需要分成三步去做
1.	更新不同单据上的分摊规则；
2.	合同线有结算取结算，无结算取IsValid=1的数据汇总；
3.	无合同付款申请，直接取IsValid=1的数据汇总。
6.	目标成本
目标成本本质上只有一个情况会影响动态成本产品分摊，那就是在最终目标成本变化的时候，动态成本产品分摊和动态成本公建分摊会受到影响，实际上是另外一种的提取规划指标。
7.	历史数据升级
这一块明浩很清楚，我不是太清楚
8.	历史无效代码删除
做着一块任务的时候需要从三个方面去考虑
1.	删除后端代码；
2.	删除前端调用；
3.	去掉XmlCommnad。
一些感悟
1.	把成本业务架构化的过程，实际上是一个不断缩小影响范围的过程，例如动态成本的本质是要更新某个因子上的变化值，变化值依次往上推分别为：科目->合约规划->单据->分期->项目或者合同类别->合约规划->单据->分期->项目，预警强控同动态成本差不多，差别是在于一个前置计算。目标成本是本质是要反应每个因子的变化，变化值依次往上推分别为：产品->科目->金额。目前的动态产品成本本质是更新产品的分摊差值，变化值依次往上推分别为：产品->科目->单据->分期->项目。综上所述，在做成本架构的过程中，要以产品，科目，合同类别，单据，分期以及项目来做，不能以某个特殊业务数据为基础，需要以基础数据为基础，把不同的业务连接起来，这样做的架构，适应能力更强，可扩展性更高。
2.	目前动态产品分摊，在某个单据的分摊过程中，只能看到这个单据最终的值，不能看到这个单据对于总体成本的影响值，个人觉得这个值，对于业务判断更加有价值，因为这个值是一个更加全局的参考值
下周计划
1.	请陪护假；
2.	每天关注动态成本分摊任务的进展，并且寄予最大的支持。

